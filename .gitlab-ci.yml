image: python:3.10.9

stages:
#  - check_code
  - build

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  IMAGE_NAME: escooters-trips/escooters-trips-api
  TAG_LATEST: public.ecr.aws/$ECR_REGISTRY_ALIAS/$IMAGE_NAME:latest
  DOCKER_TLS_CERTDIR: ""

cache:
    paths:
      - .venv

before_script:
  - python3 --version
  - apt-get update -q -y
  - apt-get install -y python3-pip
  - pip install poetry
  - poetry config virtualenvs.in-project true
  - poetry install --no-root
#
#check_code:
#  stage: check_code
#  script:
#    - poetry run pip3 install black==22.6.0
#    - poetry run black . --check --verbose --diff --color
#    - poetry run pip3 install pylint
#    - poetry run pylint --fail-under=9 src/
#   rules:
#     - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'

build:
  image: docker:stable
  stage: build
  only:
    - main
  services:
    - docker:dind
  before_script:
    - apk add --no-cache python3 py3-pip
    - pip3 install --no-cache-dir awscli
  script:
    - aws ecr-public get-login-password --region $AWS_REGION |
      docker login --username AWS --password-stdin public.ecr.aws/$ECR_REGISTRY_ALIAS
    - docker pull $TAG_LATEST || true
    - docker build -f .docker/Dockerfile-api --cache-from $TAG_LATEST -t $TAG_LATEST .
    - docker push $TAG_LATEST
